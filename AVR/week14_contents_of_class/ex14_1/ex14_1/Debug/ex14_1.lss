
ex14_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000039a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000326  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  0000039a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000039a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000408  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000085a  00000000  00000000  00000438  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ba  00000000  00000000  00000c92  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000273  00000000  00000000  0000144c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000008c  00000000  00000000  000016c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e0  00000000  00000000  0000174c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000cb  00000000  00000000  00001b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001bf7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	45 c0       	rjmp	.+138    	; 0xcc <__vector_16>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a4 30       	cpi	r26, 0x04	; 4
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	0b d0       	rcall	.+22     	; 0xc0 <main>
  aa:	3b c1       	rjmp	.+630    	; 0x322 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <timer0_init>:
}

void timer0_init()
{
	// normal mode setting
	TCCR0 = 0;
  ae:	13 be       	out	0x33, r1	; 51
	TCNT0 = 0;
  b0:	12 be       	out	0x32, r1	; 50
	
	// TOIE (Timer Overflow Interrupt Enable)
	TIMSK |= (1<< TOIE0);
  b2:	87 b7       	in	r24, 0x37	; 55
  b4:	81 60       	ori	r24, 0x01	; 1
  b6:	87 bf       	out	0x37, r24	; 55
	
	// Prescale = 1024
	TCCR0 |= (1 << CS02) | (1 << CS01) | (1 << CS00);
  b8:	83 b7       	in	r24, 0x33	; 51
  ba:	87 60       	ori	r24, 0x07	; 7
  bc:	83 bf       	out	0x33, r24	; 51
  be:	08 95       	ret

000000c0 <main>:

double Num0TInt = 0;

int main(void)
{
	DDRB = 0xff;
  c0:	8f ef       	ldi	r24, 0xFF	; 255
  c2:	87 bb       	out	0x17, r24	; 23
	PORTB = 0xff;
  c4:	88 bb       	out	0x18, r24	; 24
	
	timer0_init();
  c6:	f3 df       	rcall	.-26     	; 0xae <timer0_init>
	sei();	// UART나 Interrupt 다 포함해서 만들기 위해 사용
  c8:	78 94       	sei
  ca:	ff cf       	rjmp	.-2      	; 0xca <main+0xa>

000000cc <__vector_16>:
	// Prescale = 1024
	TCCR0 |= (1 << CS02) | (1 << CS01) | (1 << CS00);
}

ISR (TIMER0_OVF_vect)
{
  cc:	1f 92       	push	r1
  ce:	0f 92       	push	r0
  d0:	0f b6       	in	r0, 0x3f	; 63
  d2:	0f 92       	push	r0
  d4:	11 24       	eor	r1, r1
  d6:	0b b6       	in	r0, 0x3b	; 59
  d8:	0f 92       	push	r0
  da:	2f 93       	push	r18
  dc:	3f 93       	push	r19
  de:	4f 93       	push	r20
  e0:	5f 93       	push	r21
  e2:	6f 93       	push	r22
  e4:	7f 93       	push	r23
  e6:	8f 93       	push	r24
  e8:	9f 93       	push	r25
  ea:	af 93       	push	r26
  ec:	bf 93       	push	r27
  ee:	ef 93       	push	r30
  f0:	ff 93       	push	r31
	Num0TInt++;
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	40 e8       	ldi	r20, 0x80	; 128
  f8:	5f e3       	ldi	r21, 0x3F	; 63
  fa:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  fe:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 102:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 106:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 10a:	2e d0       	rcall	.+92     	; 0x168 <__addsf3>
 10c:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 110:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 114:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 118:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	if (Num0TInt == 56.25) {	// 56.25번이 1초
 11c:	20 e0       	ldi	r18, 0x00	; 0
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	41 e6       	ldi	r20, 0x61	; 97
 122:	52 e4       	ldi	r21, 0x42	; 66
 124:	85 d0       	rcall	.+266    	; 0x230 <__cmpsf2>
 126:	81 11       	cpse	r24, r1
 128:	0b c0       	rjmp	.+22     	; 0x140 <__vector_16+0x74>
		PORTB = ~PORTB;
 12a:	88 b3       	in	r24, 0x18	; 24
 12c:	80 95       	com	r24
 12e:	88 bb       	out	0x18, r24	; 24
		Num0TInt = 0;
 130:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 134:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 138:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 13c:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	}
}
 140:	ff 91       	pop	r31
 142:	ef 91       	pop	r30
 144:	bf 91       	pop	r27
 146:	af 91       	pop	r26
 148:	9f 91       	pop	r25
 14a:	8f 91       	pop	r24
 14c:	7f 91       	pop	r23
 14e:	6f 91       	pop	r22
 150:	5f 91       	pop	r21
 152:	4f 91       	pop	r20
 154:	3f 91       	pop	r19
 156:	2f 91       	pop	r18
 158:	0f 90       	pop	r0
 15a:	0b be       	out	0x3b, r0	; 59
 15c:	0f 90       	pop	r0
 15e:	0f be       	out	0x3f, r0	; 63
 160:	0f 90       	pop	r0
 162:	1f 90       	pop	r1
 164:	18 95       	reti

00000166 <__subsf3>:
 166:	50 58       	subi	r21, 0x80	; 128

00000168 <__addsf3>:
 168:	bb 27       	eor	r27, r27
 16a:	aa 27       	eor	r26, r26
 16c:	0e d0       	rcall	.+28     	; 0x18a <__addsf3x>
 16e:	9f c0       	rjmp	.+318    	; 0x2ae <__fp_round>
 170:	90 d0       	rcall	.+288    	; 0x292 <__fp_pscA>
 172:	30 f0       	brcs	.+12     	; 0x180 <__addsf3+0x18>
 174:	95 d0       	rcall	.+298    	; 0x2a0 <__fp_pscB>
 176:	20 f0       	brcs	.+8      	; 0x180 <__addsf3+0x18>
 178:	31 f4       	brne	.+12     	; 0x186 <__addsf3+0x1e>
 17a:	9f 3f       	cpi	r25, 0xFF	; 255
 17c:	11 f4       	brne	.+4      	; 0x182 <__addsf3+0x1a>
 17e:	1e f4       	brtc	.+6      	; 0x186 <__addsf3+0x1e>
 180:	85 c0       	rjmp	.+266    	; 0x28c <__fp_nan>
 182:	0e f4       	brtc	.+2      	; 0x186 <__addsf3+0x1e>
 184:	e0 95       	com	r30
 186:	e7 fb       	bst	r30, 7
 188:	7b c0       	rjmp	.+246    	; 0x280 <__fp_inf>

0000018a <__addsf3x>:
 18a:	e9 2f       	mov	r30, r25
 18c:	a1 d0       	rcall	.+322    	; 0x2d0 <__fp_split3>
 18e:	80 f3       	brcs	.-32     	; 0x170 <__addsf3+0x8>
 190:	ba 17       	cp	r27, r26
 192:	62 07       	cpc	r22, r18
 194:	73 07       	cpc	r23, r19
 196:	84 07       	cpc	r24, r20
 198:	95 07       	cpc	r25, r21
 19a:	18 f0       	brcs	.+6      	; 0x1a2 <__addsf3x+0x18>
 19c:	71 f4       	brne	.+28     	; 0x1ba <__addsf3x+0x30>
 19e:	9e f5       	brtc	.+102    	; 0x206 <__addsf3x+0x7c>
 1a0:	b9 c0       	rjmp	.+370    	; 0x314 <__fp_zero>
 1a2:	0e f4       	brtc	.+2      	; 0x1a6 <__addsf3x+0x1c>
 1a4:	e0 95       	com	r30
 1a6:	0b 2e       	mov	r0, r27
 1a8:	ba 2f       	mov	r27, r26
 1aa:	a0 2d       	mov	r26, r0
 1ac:	0b 01       	movw	r0, r22
 1ae:	b9 01       	movw	r22, r18
 1b0:	90 01       	movw	r18, r0
 1b2:	0c 01       	movw	r0, r24
 1b4:	ca 01       	movw	r24, r20
 1b6:	a0 01       	movw	r20, r0
 1b8:	11 24       	eor	r1, r1
 1ba:	ff 27       	eor	r31, r31
 1bc:	59 1b       	sub	r21, r25
 1be:	99 f0       	breq	.+38     	; 0x1e6 <__addsf3x+0x5c>
 1c0:	59 3f       	cpi	r21, 0xF9	; 249
 1c2:	50 f4       	brcc	.+20     	; 0x1d8 <__addsf3x+0x4e>
 1c4:	50 3e       	cpi	r21, 0xE0	; 224
 1c6:	68 f1       	brcs	.+90     	; 0x222 <__addsf3x+0x98>
 1c8:	1a 16       	cp	r1, r26
 1ca:	f0 40       	sbci	r31, 0x00	; 0
 1cc:	a2 2f       	mov	r26, r18
 1ce:	23 2f       	mov	r18, r19
 1d0:	34 2f       	mov	r19, r20
 1d2:	44 27       	eor	r20, r20
 1d4:	58 5f       	subi	r21, 0xF8	; 248
 1d6:	f3 cf       	rjmp	.-26     	; 0x1be <__addsf3x+0x34>
 1d8:	46 95       	lsr	r20
 1da:	37 95       	ror	r19
 1dc:	27 95       	ror	r18
 1de:	a7 95       	ror	r26
 1e0:	f0 40       	sbci	r31, 0x00	; 0
 1e2:	53 95       	inc	r21
 1e4:	c9 f7       	brne	.-14     	; 0x1d8 <__addsf3x+0x4e>
 1e6:	7e f4       	brtc	.+30     	; 0x206 <__addsf3x+0x7c>
 1e8:	1f 16       	cp	r1, r31
 1ea:	ba 0b       	sbc	r27, r26
 1ec:	62 0b       	sbc	r22, r18
 1ee:	73 0b       	sbc	r23, r19
 1f0:	84 0b       	sbc	r24, r20
 1f2:	ba f0       	brmi	.+46     	; 0x222 <__addsf3x+0x98>
 1f4:	91 50       	subi	r25, 0x01	; 1
 1f6:	a1 f0       	breq	.+40     	; 0x220 <__addsf3x+0x96>
 1f8:	ff 0f       	add	r31, r31
 1fa:	bb 1f       	adc	r27, r27
 1fc:	66 1f       	adc	r22, r22
 1fe:	77 1f       	adc	r23, r23
 200:	88 1f       	adc	r24, r24
 202:	c2 f7       	brpl	.-16     	; 0x1f4 <__addsf3x+0x6a>
 204:	0e c0       	rjmp	.+28     	; 0x222 <__addsf3x+0x98>
 206:	ba 0f       	add	r27, r26
 208:	62 1f       	adc	r22, r18
 20a:	73 1f       	adc	r23, r19
 20c:	84 1f       	adc	r24, r20
 20e:	48 f4       	brcc	.+18     	; 0x222 <__addsf3x+0x98>
 210:	87 95       	ror	r24
 212:	77 95       	ror	r23
 214:	67 95       	ror	r22
 216:	b7 95       	ror	r27
 218:	f7 95       	ror	r31
 21a:	9e 3f       	cpi	r25, 0xFE	; 254
 21c:	08 f0       	brcs	.+2      	; 0x220 <__addsf3x+0x96>
 21e:	b3 cf       	rjmp	.-154    	; 0x186 <__addsf3+0x1e>
 220:	93 95       	inc	r25
 222:	88 0f       	add	r24, r24
 224:	08 f0       	brcs	.+2      	; 0x228 <__addsf3x+0x9e>
 226:	99 27       	eor	r25, r25
 228:	ee 0f       	add	r30, r30
 22a:	97 95       	ror	r25
 22c:	87 95       	ror	r24
 22e:	08 95       	ret

00000230 <__cmpsf2>:
 230:	03 d0       	rcall	.+6      	; 0x238 <__fp_cmp>
 232:	08 f4       	brcc	.+2      	; 0x236 <__cmpsf2+0x6>
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	08 95       	ret

00000238 <__fp_cmp>:
 238:	99 0f       	add	r25, r25
 23a:	00 08       	sbc	r0, r0
 23c:	55 0f       	add	r21, r21
 23e:	aa 0b       	sbc	r26, r26
 240:	e0 e8       	ldi	r30, 0x80	; 128
 242:	fe ef       	ldi	r31, 0xFE	; 254
 244:	16 16       	cp	r1, r22
 246:	17 06       	cpc	r1, r23
 248:	e8 07       	cpc	r30, r24
 24a:	f9 07       	cpc	r31, r25
 24c:	c0 f0       	brcs	.+48     	; 0x27e <__fp_cmp+0x46>
 24e:	12 16       	cp	r1, r18
 250:	13 06       	cpc	r1, r19
 252:	e4 07       	cpc	r30, r20
 254:	f5 07       	cpc	r31, r21
 256:	98 f0       	brcs	.+38     	; 0x27e <__fp_cmp+0x46>
 258:	62 1b       	sub	r22, r18
 25a:	73 0b       	sbc	r23, r19
 25c:	84 0b       	sbc	r24, r20
 25e:	95 0b       	sbc	r25, r21
 260:	39 f4       	brne	.+14     	; 0x270 <__fp_cmp+0x38>
 262:	0a 26       	eor	r0, r26
 264:	61 f0       	breq	.+24     	; 0x27e <__fp_cmp+0x46>
 266:	23 2b       	or	r18, r19
 268:	24 2b       	or	r18, r20
 26a:	25 2b       	or	r18, r21
 26c:	21 f4       	brne	.+8      	; 0x276 <__fp_cmp+0x3e>
 26e:	08 95       	ret
 270:	0a 26       	eor	r0, r26
 272:	09 f4       	brne	.+2      	; 0x276 <__fp_cmp+0x3e>
 274:	a1 40       	sbci	r26, 0x01	; 1
 276:	a6 95       	lsr	r26
 278:	8f ef       	ldi	r24, 0xFF	; 255
 27a:	81 1d       	adc	r24, r1
 27c:	81 1d       	adc	r24, r1
 27e:	08 95       	ret

00000280 <__fp_inf>:
 280:	97 f9       	bld	r25, 7
 282:	9f 67       	ori	r25, 0x7F	; 127
 284:	80 e8       	ldi	r24, 0x80	; 128
 286:	70 e0       	ldi	r23, 0x00	; 0
 288:	60 e0       	ldi	r22, 0x00	; 0
 28a:	08 95       	ret

0000028c <__fp_nan>:
 28c:	9f ef       	ldi	r25, 0xFF	; 255
 28e:	80 ec       	ldi	r24, 0xC0	; 192
 290:	08 95       	ret

00000292 <__fp_pscA>:
 292:	00 24       	eor	r0, r0
 294:	0a 94       	dec	r0
 296:	16 16       	cp	r1, r22
 298:	17 06       	cpc	r1, r23
 29a:	18 06       	cpc	r1, r24
 29c:	09 06       	cpc	r0, r25
 29e:	08 95       	ret

000002a0 <__fp_pscB>:
 2a0:	00 24       	eor	r0, r0
 2a2:	0a 94       	dec	r0
 2a4:	12 16       	cp	r1, r18
 2a6:	13 06       	cpc	r1, r19
 2a8:	14 06       	cpc	r1, r20
 2aa:	05 06       	cpc	r0, r21
 2ac:	08 95       	ret

000002ae <__fp_round>:
 2ae:	09 2e       	mov	r0, r25
 2b0:	03 94       	inc	r0
 2b2:	00 0c       	add	r0, r0
 2b4:	11 f4       	brne	.+4      	; 0x2ba <__fp_round+0xc>
 2b6:	88 23       	and	r24, r24
 2b8:	52 f0       	brmi	.+20     	; 0x2ce <__fp_round+0x20>
 2ba:	bb 0f       	add	r27, r27
 2bc:	40 f4       	brcc	.+16     	; 0x2ce <__fp_round+0x20>
 2be:	bf 2b       	or	r27, r31
 2c0:	11 f4       	brne	.+4      	; 0x2c6 <__fp_round+0x18>
 2c2:	60 ff       	sbrs	r22, 0
 2c4:	04 c0       	rjmp	.+8      	; 0x2ce <__fp_round+0x20>
 2c6:	6f 5f       	subi	r22, 0xFF	; 255
 2c8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ca:	8f 4f       	sbci	r24, 0xFF	; 255
 2cc:	9f 4f       	sbci	r25, 0xFF	; 255
 2ce:	08 95       	ret

000002d0 <__fp_split3>:
 2d0:	57 fd       	sbrc	r21, 7
 2d2:	90 58       	subi	r25, 0x80	; 128
 2d4:	44 0f       	add	r20, r20
 2d6:	55 1f       	adc	r21, r21
 2d8:	59 f0       	breq	.+22     	; 0x2f0 <__fp_splitA+0x10>
 2da:	5f 3f       	cpi	r21, 0xFF	; 255
 2dc:	71 f0       	breq	.+28     	; 0x2fa <__fp_splitA+0x1a>
 2de:	47 95       	ror	r20

000002e0 <__fp_splitA>:
 2e0:	88 0f       	add	r24, r24
 2e2:	97 fb       	bst	r25, 7
 2e4:	99 1f       	adc	r25, r25
 2e6:	61 f0       	breq	.+24     	; 0x300 <__fp_splitA+0x20>
 2e8:	9f 3f       	cpi	r25, 0xFF	; 255
 2ea:	79 f0       	breq	.+30     	; 0x30a <__fp_splitA+0x2a>
 2ec:	87 95       	ror	r24
 2ee:	08 95       	ret
 2f0:	12 16       	cp	r1, r18
 2f2:	13 06       	cpc	r1, r19
 2f4:	14 06       	cpc	r1, r20
 2f6:	55 1f       	adc	r21, r21
 2f8:	f2 cf       	rjmp	.-28     	; 0x2de <__fp_split3+0xe>
 2fa:	46 95       	lsr	r20
 2fc:	f1 df       	rcall	.-30     	; 0x2e0 <__fp_splitA>
 2fe:	08 c0       	rjmp	.+16     	; 0x310 <__fp_splitA+0x30>
 300:	16 16       	cp	r1, r22
 302:	17 06       	cpc	r1, r23
 304:	18 06       	cpc	r1, r24
 306:	99 1f       	adc	r25, r25
 308:	f1 cf       	rjmp	.-30     	; 0x2ec <__fp_splitA+0xc>
 30a:	86 95       	lsr	r24
 30c:	71 05       	cpc	r23, r1
 30e:	61 05       	cpc	r22, r1
 310:	08 94       	sec
 312:	08 95       	ret

00000314 <__fp_zero>:
 314:	e8 94       	clt

00000316 <__fp_szero>:
 316:	bb 27       	eor	r27, r27
 318:	66 27       	eor	r22, r22
 31a:	77 27       	eor	r23, r23
 31c:	cb 01       	movw	r24, r22
 31e:	97 f9       	bld	r25, 7
 320:	08 95       	ret

00000322 <_exit>:
 322:	f8 94       	cli

00000324 <__stop_program>:
 324:	ff cf       	rjmp	.-2      	; 0x324 <__stop_program>
